version: "3.2"

services:

  dbevuser:
      image: dnhsoft/mysql-utf8:5.7
     # networks:
      #  - proxy
      #command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
      expose:
        - 3306
      environment:
        - MYSQL_ROOT_PASSWORD=${mysql_root_password}
        - MYSQL_USER=evuser
        - MYSQL_PASSWORD=${mysql_evuser_password}
        - MYSQL_DATABASE=evuser
      volumes:
        - mysqlevuserdata:/var/lib/mysql
      #restart: always
      deploy:
        restart_policy:
          condition: on-failure
          delay: 5s
          window: 120s
        labels:
          - com.df.notify=true
          - com.df.port=3306
          - com.df.reqMode=tcp
          #- com.df.srcPort=8543
          - com.df.sslVerifyNone=true
      networks:
        - ${evproject}-dbusernetwork

  dbim:
    image: dnhsoft/mysql-utf8:5.7
    # networks:
    #  - proxy
    #command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    expose:
      - 3306
    environment:
      - MYSQL_ROOT_PASSWORD=${mysql_root_password}
      - MYSQL_USER=im
      - MYSQL_PASSWORD=${mysql_im_password}
      - MYSQL_DATABASE=im
    volumes:
      - mysqlimdata:/var/lib/mysql
    #restart: always
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
      labels:
        - com.df.notify=true
        - com.df.port=3306
        - com.df.reqMode=tcp
        #- com.df.srcPort=8544
        - com.df.sslVerifyNone=true
    networks:
    - ${evproject}-dbimnetwork

  redis:
    image: bitnami/redis:latest
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_PASSWORD=${redis_password}
    networks:
      - ${evproject}-network
  redis-sentinel:
    image: bitnami/redis-sentinel:latest
    environment:
      - REDIS_MASTER_HOST=redis
      - REDIS_MASTER_PASSWORD=${redis_password}
    expose:
      - 26379
    networks:
      - ${evproject}-network

  activemq:
    image: vromero/activemq-artemis:latest
    expose:
      - 61616
    environment:
      #ACTIVEMQ_NAME: amq
      #ACTIVEMQ_REMOVE_DEFAULT_ACCOUNT: 'True'
      ARTEMIS_USERNAME: ${artemis_username}
      ARTEMIS_PASSWORD: ${artemis_password}
    networks:
      - ${evproject}-network


  jobmanager:
    image: flink:1.5.3
    expose:
      - 6123
      - 8081
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    networks:
    - ${evproject}-network

  taskmanager:
    image: flink:1.5.3
    expose:
      - 6121
      - 6122
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    networks:
    - ${evproject}-network


  zookeeper:
    image: 'bitnami/zookeeper:latest'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
    - ${evproject}-network
  kafka:
    image: 'liuganquan/kafka-dockerize:latest'
    entrypoint: dockerize -wait tcp://zookeeper:2181 -timeout 600s /app-entrypoint.sh
    command: /run.sh
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
    - ${evproject}-network


##系统基础服务
  eveureka1:
    #build:
      #context: .
      #dockerfile: EvEurekaServer/Dockerfile
    image: 10.143.132.47/sxlt/eveurekaserver
    entrypoint: dockerize -wait tcp://dbevuser:3306 -wait tcp://dbim:3306 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx256m -Djava.security.egd=file:/dev/./urandom -jar /app/EasyViewEurekaServer-0.0.2-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    networks:
      ${evproject}-network:
        aliases:
          - eveureka
      ${evproject}-dbusernetwork:
      ${evproject}-dbimnetwork:
     # - proxy
    environment:
      - config.profile=${configprofile}
      - spring.profiles.active=ha1
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - JAVA_OPTS=-Xmx256m
    expose:
      - 8761
   # depends_on:
    #  - db
  eveureka2:
    #build:
    #context: .
    #dockerfile: EvEurekaServer/Dockerfile
    image: 10.143.132.47/sxlt/eveurekaserver
    entrypoint: dockerize -wait tcp://dbevuser:3306 -wait tcp://dbim:3306 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx256m -Djava.security.egd=file:/dev/./urandom -jar /app/EasyViewEurekaServer-0.0.2-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    networks:
       ${evproject}-network:
          aliases:
            - eveureka
       ${evproject}-dbusernetwork:
       ${evproject}-dbimnetwork:
      # - proxy
    environment:
      - config.profile=${configprofile}
      - spring.profiles.active=ha2
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - JAVA_OPTS=-Xmx256m
    expose:
      - 8761
    #depends_on:
    #  - db

  evconfig:
    #build:
     # context: .
     # dockerfile: EvConfigServer/Dockerfile
    image: 10.143.132.47/sxlt/evconfigserver
    entrypoint: dockerize -wait tcp://eveureka:8761 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx256m -Djava.security.egd=file:/dev/./urandom -jar /app/EasyViewConfigServer-0.0.2-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    networks:
      - ${evproject}-network
      - ${evproject}-dbusernetwork
    expose:
      - 8888
    environment:
      - eureka.host=eveureka
      - eureka.host.rep=eveureka
      #- config.profile=native
      #- config.path=/app/config
      - spring.cloud.config.server.git.uri=${git_uri}
      - spring.cloud.config.server.git.username=${git_username}
      - spring.cloud.config.server.git.password=${git_password}
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - JAVA_OPTS=-Xmx256m
    #volume:
    #depends_on:
     # - eveureka1
     # - eveureka2
     # - eveureka3


##后台服务
  evtaskengine:
    #build:
     # context: .
     # dockerfile: EvTaskEngine/Dockerfile
    image: 10.143.132.47/sxlt/evtaskengine
    entrypoint: dockerize -wait tcp://evconfig:8888 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx512m -Djava.security.egd=file:/dev/./urandom -jar /app/EasyViewTaskEngine-0.0.2-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    networks:
      - ${evproject}-network
      - ${evproject}-dbusernetwork
    expose:
      - 20881
    environment:
      - eureka.host=eveureka
      - eureka.host.rep=eveureka
      - config.profile=${configprofile}
      - eureka.instance.metadataMap.node=control
      - user.timezone=Iceland
      - config.label=${configlabel}
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - spring.cloud.config.retry.max-attempts=5
      - spring.profiles.active=nojms
      - JAVA_OPTS=-Xmx512m
    #depends_on:
     # - evconfig
  evcmdb:
    #build:
    #  context: .
    #  dockerfile: EvCMDBManager/Dockerfile
    image: 10.143.132.47/sxlt/evcmdb
    entrypoint: dockerize -wait tcp://evtaskengine:20881 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx512m -Djava.security.egd=file:/dev/./urandom -jar /app/EasyViewCMDBManager-0.0.2-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    expose:
      - 20883
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    networks:
      - ${evproject}-network
      - ${evproject}-dbusernetwork
    environment:
      - eureka.host=eveureka
      - eureka.host.rep=eveureka
      - config.profile=${configprofile}
      - eureka.instance.metadataMap.node=control
      - user.timezone=Iceland
      - config.label=${configlabel}
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - spring.cloud.config.retry.max-attempts=5
      - JAVA_OPTS=-Xmx512m
    #depends_on:
     # - evtaskengine
  evi18nserver:
    #build:
    #  context: .
    #  dockerfile: EvI18nServer/Dockerfile
    image: 10.143.132.47/sxlt/evi18nserver
    entrypoint: dockerize -wait tcp://evtaskengine:20881 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx256m -Djava.security.egd=file:/dev/./urandom -jar /app/EasyViewI18nServer-0.0.2-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    expose:
      - 20888
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    networks:
      - ${evproject}-network
      - ${evproject}-dbusernetwork
    environment:
      - eureka.host=eveureka
      - eureka.host.rep=eveureka
      - config.profile=${configprofile}
      - eureka.instance.metadataMap.node=control
      - user.timezone=Iceland
      - config.label=${configlabel}
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - spring.cloud.config.retry.max-attempts=5
      - JAVA_OPTS=-Xmx256m
    #depends_on:
     # - evtaskengine
  evgatherframe:
    #build:
    #  context: .
    #  dockerfile: EvGatherFrame/Dockerfile
    image: 10.143.132.47/sxlt/evgatherframe
    entrypoint: dockerize -wait tcp://evtaskengine:20881 -timeout 600s
    command: java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx512m -Djava.security.egd=file:/dev/./urandom -jar /app/EasyViewGatherFrame-0.0.2-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true
    expose:
      - 20882
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    networks:
      - ${evproject}-network
      - ${evproject}-dbusernetwork
    environment:
      - eureka.host=eveureka
      - eureka.host.rep=eveureka
      - config.profile=${configprofile}
      - eureka.instance.metadataMap.regions=DC1
      - user.timezone=Iceland
      - config.label=${configlabel}
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - spring.cloud.config.retry.max-attempts=5
      - spring.profiles.active=nojms
      - JAVA_OPTS=-Xmx512m
    #depends_on:
      #- evtaskengine
  evvsphereagent:
    #build:
    #  context: .
    #  dockerfile: EvVSphereAgent/Dockerfile
    image: 10.143.132.47/sxlt/evvsphereagent
    entrypoint: dockerize -wait tcp://evtaskengine:20881 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx512m -Djava.security.egd=file:/dev/./urandom -jar /app/EasyViewVSphereAgent-0.0.2-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    expose:
      - 20887
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    networks:
      - ${evproject}-network
      - ${evproject}-dbusernetwork
    environment:
      - eureka.host=eveureka
      - eureka.host.rep=eveureka
      - config.profile=${configprofile}
      - eureka.instance.metadataMap.regions=DC1
      - user.timezone=Iceland
      - config.label=${configlabel}
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - spring.cloud.config.retry.max-attempts=5
      - spring.profiles.active=nojms
      - JAVA_OPTS=-Xmx512m
    #depends_on:
      #- evtaskengine
  evvspheremanager:
    #build:
    #  context: .
    #  dockerfile: EvVSphereManage/Dockerfile
    image: 10.143.132.47/sxlt/evvspheremanager
    entrypoint: dockerize -wait tcp://evtaskengine:20881 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx512m -Djava.security.egd=file:/dev/./urandom -jar /app/EasyViewVSphereManage-0.0.2-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    expose:
      - 20886
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    networks:
      - ${evproject}-network
      - ${evproject}-dbusernetwork
    environment:
      - eureka.host=eveureka
      - eureka.host.rep=eveureka
      - config.profile=${configprofile}
      - eureka.instance.metadataMap.node=control
      - user.timezone=Iceland
      - config.label=${configlabel}
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - spring.cloud.config.retry.max-attempts=5
      - spring.profiles.active=nojms
      - JAVA_OPTS=-Xmx512m
    #depends_on:
      #- evtaskengine
  evalarmcenter:
    #build:
     # context: .
    #  dockerfile: EvAlarmCenter/Dockerfile
    image: 10.143.132.47/sxlt/evalarmcenter
    entrypoint: dockerize -wait tcp://evtaskengine:20881 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx512m -Djava.security.egd=file:/dev/./urandom -jar /app/EasyViewAlarmCenter-1.0.3-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    expose:
      - 20885
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    networks:
      - ${evproject}-network
      - ${evproject}-dbusernetwork
    environment:
      - eureka.host=eveureka
      - eureka.host.rep=eveureka
      - config.profile=${configprofile}
      - eureka.instance.metadataMap.node=control
      - user.timezone=Iceland
      - config.label=${configlabel}
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - spring.cloud.config.retry.max-attempts=5
      - spring.profiles.active=nojms
      - JAVA_OPTS=-Xmx512m
    #depends_on:
      #- evtaskengine
  evtaskjob:
    #build:
    #  context: .
    #  dockerfile: EvTaskJob/Dockerfile
    image: 10.143.132.47/sxlt/evtaskjob
    entrypoint: dockerize -wait tcp://evtaskengine:20881 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx512m -Djava.security.egd=file:/dev/./urandom -jar /app/EasyViewTaskJob-0.0.2-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    expose:
      - 20884
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    networks:
      - ${evproject}-network
      - ${evproject}-dbusernetwork
    environment:
      - eureka.host=eveureka
      - eureka.host.rep=eveureka
      - config.profile=${configprofile}
      - eureka.instance.metadataMap.node=control
      - user.timezone=Iceland
      - config.label=${configlabel}
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - spring.cloud.config.retry.max-attempts=5
      - JAVA_OPTS=-Xmx512m
    #depends_on:
     # - evtaskengine
  evservicemonitor:
    #build:
    #  context: .
    #  dockerfile: EvServiceMonitor/Dockerfile
    image: 10.143.132.47/sxlt/evservicemonitor
    entrypoint: dockerize -wait tcp://evconfig:8888 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx256m -Djava.security.egd=file:/dev/./urandom -jar /app/EasyViewServiceMonitor-0.0.2-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    expose:
      - 20890
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
      labels:
        - com.df.notify=true
        - com.df.port=20890
        - com.df.reqMode=tcp
        #- com.df.srcPort=8445
        - com.df.sslVerifyNone=true
    networks:
      - ${evproject}-network
    environment:
      - eureka.host=eveureka
      - eureka.host.rep=eveureka
      - config.profile=${configprofile}
      - config.label=${configlabel}
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - spring.cloud.config.retry.max-attempts=5
      - JAVA_OPTS=-Xmx256m
    #depends_on:
     # - evtaskengine
  evzuulmanager:
    #build:
    #  context: .
    #  dockerfile: EvServiceMonitor/Dockerfile
    image: 10.143.132.47/sxlt/evzuulmanager
    entrypoint: dockerize -wait tcp://evtaskengine:20881 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx256m -Djava.security.egd=file:/dev/./urandom -jar /app/EvZuulManager-0.0.2-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    #ports:
      #- 20892
    expose:
      - 20892
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
      labels:
        - com.df.notify=true
        - com.df.port=20892
        - com.df.reqMode=tcp
        - com.df.srcPort=${exposezuulport}
        - com.df.sslVerifyNone=true
    networks:
      - ${evproject}-network
      - ${evproject}-dbusernetwork
      - proxy
      #- proxy
    environment:
      - eureka.host=eveureka
      - eureka.host.rep=eveureka
      - config.profile=${configprofile}
      - config.label=${configlabel}
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - spring.cloud.config.retry.max-attempts=5
      - spring.profiles.active=nojms
      - JAVA_OPTS=-Xmx256m


#前台服务
  evimtask:
    image: 10.143.132.47/sxlt/evimtask
    entrypoint: dockerize -wait tcp://evconfig:8888 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx512m -Djava.security.egd=file:/dev/./urandom -jar /app/task-server-2.1-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    expose:
    - 28085
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    networks:
      - ${evproject}-network
      - ${evproject}-dbimnetwork
    environment:
      - eureka.host=eveureka
      - eureka.host.rep=eveureka
      - config.profile=${configprofile}
      - user.timezone=Iceland
      - config.label=${configlabel}
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - spring.cloud.config.retry.max-attempts=5
      - JAVA_OPTS=-Xmx512m

  evimthird:
    image: 10.143.132.47/sxlt/evimthird
    entrypoint: dockerize -wait tcp://evimtask:28085 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx512m -Djava.security.egd=file:/dev/./urandom -jar /app/thirdinterface-server-2.1-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    expose:
      - 28086
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
      labels:
        - com.df.notify=true
        - com.df.port=28086
        - com.df.reqMode=tcp
        - com.df.srcPort=${exposethirdport}
        - com.df.sslVerifyNone=true
    networks:
      - ${evproject}-network
      - ${evproject}-dbimnetwork
      - proxy
      #- proxy
    environment:
      - eureka.host=eveureka
      - eureka.host.rep=eveureka
      - config.profile=${configprofile}
      - user.timezone=Iceland
      - config.label=${configlabel}
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - spring.cloud.config.retry.max-attempts=5
      - JAVA_OPTS=-Xmx512m

  evimapiprovider:
    image: 10.143.132.47/sxlt/evimapiprovider
    entrypoint: dockerize -wait tcp://evimtask:28085 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx512m -Djava.security.egd=file:/dev/./urandom -jar /app/apiprovider-server-2.1-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    expose:
      - 28084
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    networks:
      - ${evproject}-network
      - ${evproject}-dbimnetwork
    environment:
      - eureka.host=eveureka
      - eureka.host.rep=eveureka
      - config.profile=${configprofile}
      - user.timezone=Iceland
      - config.label=${configlabel}
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - spring.cloud.config.retry.max-attempts=5
      - JAVA_OPTS=-Xmx512m

  evimweb:
    image: 10.143.132.47/sxlt/evimweb
    entrypoint: dockerize -wait tcp://evimtask:28085 -timeout 600s
    command: sh -c "java -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap -Xmx512m -Djava.security.egd=file:/dev/./urandom -jar /app/im-2.1-SNAPSHOT.jar --thin.root=/app/m2 --thin.offline=true"
    expose:
      - 8443
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        window: 120s
    networks:
      - ${evproject}-network
      - ${evproject}-dbimnetwork
    environment:
      - eureka.host=eveureka
      - eureka.host.rep=eveureka
      - config.profile=${configprofile}
      - user.timezone=Iceland
      - config.label=${configlabel}
      - spring.cloud.inetutils.preferred-networks=${preferrednetworks}
      - spring.cloud.config.retry.max-attempts=5
      - JAVA_OPTS=-Xmx512m



#监控相关服务
  zipkin:
    image: openzipkin/zipkin
    #container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/tree/1.19.0/zipkin-server#environment-variables
    environment:
      - STORAGE_TYPE=mem
      # Uncomment to disable scribe
      # - SCRIBE_ENABLED=false
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to enable debug logging
      # - JAVA_OPTS=-Dlogging.level.zipkin=DEBUG
    expose:
      # Port used for the Zipkin UI and HTTP Api
      - 9411
    networks:
      - ${evproject}-network

# Uncomment to use the log-data volume
# volumes:
#     log-data:
#         driver: local


networks:
  ${evproject}-network:
    external: true
  ${evproject}-dbusernetwork:
    external: true
  ${evproject}-dbimnetwork:
    external: true
  proxy:
    external: true

volumes:
  mysqlevuserdata:
    external: false
  mysqlimdata:
    external: false
